// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace FarmaciaApp.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    partial class ApplicationContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Fabricante", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.HasKey("Id");

                    b.ToTable("Fabricantes");
                });

            modelBuilder.Entity("Medicamento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DataValidade")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("FabricanteId")
                        .HasColumnType("integer");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("NumeroRegistroAnvisa")
                        .IsRequired()
                        .HasMaxLength(14)
                        .HasColumnType("character varying(14)");

                    b.Property<decimal>("Preco")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int>("QuantidadeComprimidos")
                        .HasColumnType("integer");

                    b.Property<string>("TelefoneSAC")
                        .IsRequired()
                        .HasMaxLength(13)
                        .HasColumnType("character varying(13)");

                    b.HasKey("Id");

                    b.HasIndex("FabricanteId");

                    b.ToTable("Medicamentos");
                });

            modelBuilder.Entity("MedicamentoReacaoAdversa", b =>
                {
                    b.Property<int>("MedicamentoId")
                        .HasColumnType("integer");

                    b.Property<int>("ReacaoAdversaId")
                        .HasColumnType("integer");

                    b.HasKey("MedicamentoId", "ReacaoAdversaId");

                    b.HasIndex("ReacaoAdversaId");

                    b.ToTable("MedicamentoReacoesAdversas");
                });

            modelBuilder.Entity("ReacaoAdversa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.HasKey("Id");

                    b.ToTable("ReacoesAdversas");
                });

            modelBuilder.Entity("Medicamento", b =>
                {
                    b.HasOne("Fabricante", "Fabricante")
                        .WithMany("Medicamentos")
                        .HasForeignKey("FabricanteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Fabricante");
                });

            modelBuilder.Entity("MedicamentoReacaoAdversa", b =>
                {
                    b.HasOne("Medicamento", "Medicamento")
                        .WithMany("ReacoesAdversas")
                        .HasForeignKey("MedicamentoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ReacaoAdversa", "ReacaoAdversa")
                        .WithMany("Medicamentos")
                        .HasForeignKey("ReacaoAdversaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Medicamento");

                    b.Navigation("ReacaoAdversa");
                });

            modelBuilder.Entity("Fabricante", b =>
                {
                    b.Navigation("Medicamentos");
                });

            modelBuilder.Entity("Medicamento", b =>
                {
                    b.Navigation("ReacoesAdversas");
                });

            modelBuilder.Entity("ReacaoAdversa", b =>
                {
                    b.Navigation("Medicamentos");
                });
#pragma warning restore 612, 618
        }
    }
}
